---

kind: ClusterIssuer
apiVersion: cert-manager.io/v1
metadata:
  name: letsencrypt
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: stephan.zlatarev@sap.com
    privateKeySecretRef:
      name: letsencrypt
    solvers:
      - http01:
          ingress:
            class: nginx

---

kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: www
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt"
spec:
  rules:
    - host: aiarena.superskill.me
      http:
       paths:
         - path: /
           pathType: Prefix
           backend:
             service:
               name: aiarena-ui
               port:
                 number: 80
         - path: /api
           pathType: Prefix
           backend:
             service:
               name: aiarena-api
               port:
                 number: 3000
  tls:
    - hosts:
        - aiarena.superskill.me
      secretName: ingress-www

---

kind: Service
apiVersion: v1
metadata:
  name: aiarena-api
spec:
  selector:
    module: aiarena-api
  ports:
    - port: 3000

---

kind: Service
apiVersion: v1
metadata:
  name: aiarena-ui
spec:
  selector:
    module: aiarena-ui
  ports:
    - port: 80

---

kind: Service
apiVersion: v1
metadata:
  name: mongo
spec:
  selector:
    module: mongo
  ports:
    - port: 27017
      targetPort: 27017
  type: ClusterIP

---

kind: Deployment
apiVersion: apps/v1
metadata:
  name: aiarena-api
  labels:
    module: aiarena-api
spec:
  selector:
    matchLabels:
      module: aiarena-api
  template:
    metadata:
      labels:
        module: aiarena-api
    spec:
      containers:
        - name: aiarena-api
          image: docker.io/stephanzlatarev/aiarena-api
          ports:
            - containerPort: 3000

---

kind: Deployment
apiVersion: apps/v1
metadata:
  name: aiarena-ui
  labels:
    module: aiarena-ui
spec:
  selector:
    matchLabels:
      module: aiarena-ui
  template:
    metadata:
      labels:
        module: aiarena-ui
    spec:
      containers:
        - name: aiarena-ui
          image: docker.io/stephanzlatarev/aiarena-ui
          ports:
            - containerPort: 3000

---

kind: CronJob
apiVersion: batch/v1
metadata:
  name: aiarena-replay
spec:
  schedule: "*/10 * * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      parallelism: 1
      completions: 1
      backoffLimit: 1
      ttlSecondsAfterFinished: 600
      template:
        spec:
          restartPolicy: Never
          containers:
            - name: replay
              image: docker.io/stephanzlatarev/aiarena-replay
              imagePullPolicy: Always
              volumeMounts:
                - name: secrets
                  mountPath: /app/secrets
                  readOnly: true
          volumes:
            - name: secrets
              secret:
                secretName: aiarena

---

kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: mongo
  labels:
    module: mongo
spec:
  replicas: 1
  serviceName: mongo
  selector:
    matchLabels:
      module: mongo
  template:
    metadata:
      labels:
        module: mongo
    spec:
      containers:
        - name: mongo
          image: mongo:7
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo
              mountPath: /data/db
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: mongo
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 200Gi
        storageClassName: do-block-storage

---
